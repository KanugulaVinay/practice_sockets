{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\temporary\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import '@fontsource/roboto/300.css';\n// import '@fontsource/roboto/400.css';\n// import '@fontsource/roboto/500.css';\n// import '@fontsource/roboto/700.css';\n// import Button from '@mui/material/Button';\n// import './App.css';\n// import { useEffect, useState } from 'react';\n// import {io} from \"socket.io-client\";\n\n// function App() {\n//   const [socket,setSocket] = useState(null);\n//   useEffect(() => {\n//     setSocket(io('http://localhost:4000'));\n//   }, []);\n\n//   return (\n//     <div>\n//       HELLO SOCKET\n//       <Button variant=\"text\">Text</Button>\n//     </div>\n\n//   );\n// }\n\n// export default App;\n\n// import \"./styles.css\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = [{\n  name: 'India',\n  value: 'IN',\n  cities: ['Delhi', 'Mumbai']\n}, {\n  name: 'Pakistan',\n  value: 'PAK',\n  cities: ['Lahore', 'Karachi']\n}, {\n  name: 'Bangladesh',\n  value: 'BG',\n  cities: ['Dhaka', 'Chittagong']\n}];\nexport default function App() {\n  _s();\n  const [country, setCountry] = useState('');\n  const handleClick = e => {\n    if (e.target.value === '-') {\n      return;\n    }\n    const COUNTRY = countries.find(c => c.value === e.target.value);\n    setCountry(COUNTRY);\n    console.log(exists);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => {\n        handleClick(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: '-',\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), countries.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.value,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XQeAKwU+rv8GIUZSuxqeGHqZawo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","countries","name","value","cities","App","_s","country","setCountry","handleClick","e","target","COUNTRY","find","c","console","log","exists","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/temporary/client/src/App.js"],"sourcesContent":["// import '@fontsource/roboto/300.css';\n// import '@fontsource/roboto/400.css';\n// import '@fontsource/roboto/500.css';\n// import '@fontsource/roboto/700.css';\n// import Button from '@mui/material/Button';\n// import './App.css';\n// import { useEffect, useState } from 'react';\n// import {io} from \"socket.io-client\";\n\n// function App() {\n//   const [socket,setSocket] = useState(null);\n//   useEffect(() => {\n//     setSocket(io('http://localhost:4000'));\n//   }, []);\n\n\n//   return (\n//     <div>\n//       HELLO SOCKET\n//       <Button variant=\"text\">Text</Button>\n//     </div>\n    \n//   );\n// }\n\n// export default App;\n\n// import \"./styles.css\";\nimport {useState} from 'react';\nconst countries =[\n  {\n    name: 'India',\n    value: 'IN',\n    cities: ['Delhi', 'Mumbai']\n  },\n  {\n    name: 'Pakistan',\n    value: 'PAK',\n    cities: ['Lahore', 'Karachi']\n  },\n  {\n    name: 'Bangladesh',\n    value: 'BG',\n    cities: ['Dhaka', 'Chittagong']\n  }\n]\nexport default function App() {\n  const [country,setCountry] = useState('');\n  const handleClick = (e) => {\n    if(e.target.value === '-'){\n      return;\n    }\n    const COUNTRY = countries.find(c => c.value === e.target.value);\n    setCountry(COUNTRY)\n    console.log(exists);\n\n\n  };\n  return (\n    <div className=\"App\">\n      <select onChange={(e) => {handleClick(e)}}>\n        <option value={'-'}>Country</option>\n        {countries.map((item,index) => {\n          return (\n            <option value={item.value}>{item.name}</option>\n          )\n        })}\n      </select>\n\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/B,MAAMC,SAAS,GAAE,CACf;EACEC,IAAI,EAAE,OAAO;EACbC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE,CAAC,OAAO,EAAE,QAAQ;AAC5B,CAAC,EACD;EACEF,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,KAAK;EACZC,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS;AAC9B,CAAC,EACD;EACEF,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE,CAAC,OAAO,EAAE,YAAY;AAChC,CAAC,CACF;AACD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAMW,WAAW,GAAIC,CAAC,IAAK;IACzB,IAAGA,CAAC,CAACC,MAAM,CAACR,KAAK,KAAK,GAAG,EAAC;MACxB;IACF;IACA,MAAMS,OAAO,GAAGX,SAAS,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACX,KAAK,KAAKO,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;IAC/DK,UAAU,CAACI,OAAO,CAAC;IACnBG,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;EAGrB,CAAC;EACD,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBnB,OAAA;MAAQoB,QAAQ,EAAGV,CAAC,IAAK;QAACD,WAAW,CAACC,CAAC,CAAC;MAAA,CAAE;MAAAS,QAAA,gBACxCnB,OAAA;QAAQG,KAAK,EAAE,GAAI;QAAAgB,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACnCvB,SAAS,CAACwB,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,KAAK;QAC7B,oBACE3B,OAAA;UAAQG,KAAK,EAAEuB,IAAI,CAACvB,KAAM;UAAAgB,QAAA,EAAEO,IAAI,CAACxB;QAAI;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAEnD,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV;AAAClB,EAAA,CAzBuBD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}